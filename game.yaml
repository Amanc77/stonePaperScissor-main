id: rock-paper-scissor
namespace: game
tasks:
  - id: generate-choice
    type: io.kestra.core.tasks.scripts.Python
    description: "Generate computer's choice"
    pythonPath: "/usr/bin/python3"
    commands:
      - |
        import random
        choices = ["rock", "paper", "scissor"]
        result = random.choice(choices)
        # Print the result as JSON
        print(result)  # This is the computer's choice

  - id: play-round
    type: io.kestra.core.tasks.scripts.Python
    description: "Play a round of Rock Paper Scissors"
    pythonPath: "/usr/bin/python3"
    commands:
      - |
        # Assume userChoice and compChoice are inputs from previous tasks
        user_choice = inputs.userChoice
        comp_choice = inputs.compChoice

        # Your logic for determining the winner
        if user_choice == comp_choice:
          result = "It's a tie!"
        elif (user_choice == "rock" and comp_choice == "scissor") or \
             (user_choice == "paper" and comp_choice == "rock") or \
             (user_choice == "scissor" and comp_choice == "paper"):
          result = "You win!"
        else:
          result = "You lose!"

        # Pass the result to the next task
        outputs.result = result
        print(result)

  - id: final-result
    type: io.kestra.core.tasks.scripts.Python
    description: "Display the final result"
    pythonPath: "/usr/bin/python3"
    commands:
      - |
        # Assuming previous results are passed via inputs
        final_result = inputs.result
        print(f"Final Result: {final_result}")  # Display the final result
